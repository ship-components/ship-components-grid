{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0e03c593e290dcbc5c26","webpack:///./src/Grid.js","webpack:///external \"React\"","webpack:///external \"react-dom\"","webpack:///external \"classnames\"","webpack:///external \"masonry-layout\"","webpack:///external \"imagesloaded\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AAIA,KAAM,YAAY,OAAO,WAAW;;AAEpC;;;;KAGqB;mBACnB;;iBAAY,OAAO;2BAAA;;yFAEjB;;WAAK,cAAc,MAAK,YAAY,KAApC;YACD;AAED;;;;;;;;;yCAKE;WAAI,KAAK,WAAW,KAAK,MAAM,YAAY,CAAC,WAC1C;AACD;AAED;;WAAI,KAAK,mBAAS,YAAY,KAAK,KAEnC;;AACA;YAAK,sCAAsB;6BAEzB;mBAAU,KAAK,MACf;uBAAc,KAAK,MACnB;sBAAa,KAAK,MAClB;0BAAiB,KAAK,MAGxB;AAPE,QADa;;AASf;WAAI,KAAK,MAAM,cACb;cACD;AAFD,cAGE;cAAK,QACN;AACF;AAED;;;;;;;;0CAIE;WAAI,CAAC,KAAK,WAAW,CAAC,WACpB;AACD;AAED;;AACA;AACA;YAAK,QAEL;;AACA;YAAK,QAEL;;AACA;WAAI,KAAK,MAAM,cACb;cACD;AAED;;AACA;kBAAW,YACT;gBAAO,cAAc,IAAI,MAC1B;AAFD,UAGD;AAED;;;;;;;;mCAIE;YAAK,QACN;AAED;;;;;;;;iDAG4B;oBAC1B;;WAAI,CAAC,WACH;AACD;AAED;;WAAI,KAAK,mBAAS,YAAY,KAAK,KACnC;mCAAa,IAAI,YACf;gBAAK,QACN;AACF;AAED;;;;;;;;;8BAIS;oBACP;;8BACE,mBAAM,MAAM;oBACC,0BAAW,wBAAwB,KAAK,MACnD;cAEC;AAHD,QADF,kBAIS,SAAS,IAAI,KAAK,MAAM,UAAU,iBACvC;aAAI,CAAC,OACH;kBACD;AAED;;AACA;gCAAa,aAAa;sBACb,0BAAW,MAAM,MAAM,WAAW,OAAK,MAAM,aAAa,OAAO,GAAG,OAAK,MAAM,aAAa,SAE1G;AAFG,UADK;AAMd;;;;;;;AAGH;;;;;mBA1GqB;AA8GrB,MAAK;iBAEH;aACA;iBACA;cACA;oBAAiB;AAJjB,G;;;;;;AC9HF,gD;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;ACAA,gD","file":"ShipComponentsGrid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"react-dom\"), require(\"classnames\"), require(\"masonry-layout\"), require(\"imagesloaded\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\", \"react-dom\", \"classnames\", \"masonry-layout\", \"imagesloaded\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"React\"), require(\"react-dom\"), require(\"classnames\"), require(\"masonry-layout\"), require(\"imagesloaded\")) : factory(root[\"React\"], root[\"react-dom\"], root[\"classnames\"], root[\"masonry-layout\"], root[\"imagesloaded\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0e03c593e290dcbc5c26\n **/","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport Masonry from 'masonry-layout';\nimport imagesLoaded from 'imagesloaded';\n\n/**\n * Used for server rendering\n * @type {Boolean}\n */\nconst isBrowser = typeof window !== 'undefined';\n\n/**\n * Masonry React Component for dynampic grids\n */\nexport default class Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.forceLayout = this.forceLayout.bind(this);\n  }\n\n  /**\n   * Setup\n   * @return {[type]} [description]\n   */\n  componentDidMount() {\n    if (this.masonry || this.props.disabled || !isBrowser) {\n      return;\n    }\n\n    let el = ReactDOM.findDOMNode(this.refs.container);\n\n    // create masonry for specified container\n    this.masonry = new Masonry(el, {\n      transitionDuration: 0,\n      fitWidth: this.props.fitWidth,\n      itemSelector: this.props.itemSelector,\n      columnWidth: this.props.columnWidth,\n      percentPosition: this.props.percentPosition\n    });\n\n    // relayout when images are loaded\n    if (this.props.imagesLoaded) {\n      this.reloadWhenImagesAreLoaded();\n    } else {\n      this.masonry.layout();\n    }\n  }\n\n  /**\n   * Update\n   */\n  componentDidUpdate() {\n    if (!this.masonry || !isBrowser) {\n      return;\n    }\n\n    // reload all items in container (bad for performance - should find a way\n    // to append/prepend by disabling react render)\n    this.masonry.reloadItems();\n\n    // relayout after reloading items\n    this.masonry.layout();\n\n    // relayout again when images are loaded\n    if (this.props.imagesLoaded) {\n      this.reloadWhenImagesAreLoaded();\n    }\n\n    // force resize event\n    setTimeout(function() {\n      window.dispatchEvent(new Event('resize'));\n    }, 1);\n  }\n\n  /**\n   * Allow external components to froce the layout to update\n   */\n  forceLayout() {\n    this.masonry.layout();\n  }\n\n  /**\n   * Check if images are loaded yet\n   */\n  reloadWhenImagesAreLoaded() {\n    if (!isBrowser) {\n      return;\n    }\n\n    let el = ReactDOM.findDOMNode(this.refs.container);\n    imagesLoaded(el, () => {\n      this.masonry.layout();\n    });\n  }\n\n  /**\n   * Render\n   * @return {React}\n   */\n  render() {\n    return (\n      <this.props.component\n        className={classNames('ship-components-grid', this.props.className)}\n        ref='container'\n      >\n        {React.Children.map(this.props.children, child => {\n          if (!child) {\n            return child;\n          }\n\n          // Inject itemSelector class\n          return React.cloneElement(child, {\n            className: classNames(child.props.className, this.props.itemSelector.substr(1, this.props.itemSelector.length - 1))\n          });\n        })}\n      </this.props.component>\n    );\n  }\n}\n\n/**\n * Defaults\n * @type {Object}\n */\nGrid.defaultProps = {\n  imagesLoaded: false,\n  fitWidth: false,\n  itemSelector: '.ship-components-grid--item',\n  component: 'div',\n  percentPosition: false\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Grid.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react-dom\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"classnames\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"masonry-layout\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"imagesloaded\"\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}